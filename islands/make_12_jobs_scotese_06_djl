#!/bin/ksh
#
###  get args
if [ "$#" -eq 0 ]; then
    echo "Illegal number of options: must be greater than 0"
    exit
fi
#
# options can either be "all" or a list of experiments
explist=$*
#
do_submit=0
do_timestep=0
#
#
\cd ~/scotese
#
co2_file='co2_all_03_nt.dat'
#
temp=`cat ${co2_file} | awk '{print $1}'`
set -A dates $temp # dates is an array of dates
#
ic="0"
#
\cd ~/scotese
#
#
solar_age="0.0 Ma"
ancil_temp="000_0_1deg"
desc_temp="Scotese_000_0"
co2_temp="4.25364e-04"
land_temp="2431"
expt_tempo="tfgwa" # this will be edited to ${expid_oldo}$let
expt_tempa="teyfa" # this will be edited to ${expid_olda}$let

nisle_temp="3"
nsegmax_temp="2"
nextcnst_temp="20"

expt_orig='tfjaa' # this will be edited to ${expt} 



#
for expid in tfja tfjA tfJa tfJA tFja ; do
   if [ "$expid" = "tfja" ] ; then
      expid_oldo="tfgw"
      expid_olda="teyf"
      expid_isl="teye"
   elif [ "$expid" = "tfjA" ] ; then
      expid_oldo="tfgW"
      expid_olda="teyF"
      expid_isl="teyE"
   elif [ "$expid" = "tfJa" ] ; then
      expid_oldo="tfGw"
      expid_olda="teYf"
      expid_isl="teYe"
   elif [ "$expid" = "tfJA" ] ; then
      expid_oldo="tfGW"
      expid_olda="teYF"
      expid_isl="teYE"
   elif [ "$expid" = "tFja" ] ; then
      expid_oldo="tFgw"
      expid_olda="tEyf"
      expid_isl="tEye"
   fi
   for let in {a..z} ; do
#
#      island="y"
#      if [ "$let" = "a" -o "$let" = "b" -o "$let" = "c" -o "$let" = "d" -o "$let" = "e" -o "$let" = "f" -o "$let" = "g" -o "$let" = "h" -o "$let" = "i" -o "$let" = "j" ] ; then
#         if [ "$expid" = "tfgw" ] ; then
#            island="n"
#         fi
#      fi
      island="y2"
#
      \cd ~/scotese
      if [ "${dates[$ic]}" != "" ] ; then # if this index exists in co2_all.dat
     
         expt=${expid}${let}
         expt_isl=${expid_isl}${let}

         date1="${dates[$ic]}"
         age1=`echo $date1 | cut -d_ -f1`
         age2=`echo $date1 | cut -d_ -f2`
         age1=`expr $age1 + 0`
#
         if [ "$expt" != "${expt_orig}" ] ; then # if not original processed job
         if [[ "${explist}" == 'all' || "${explist}" == *"${expid}${let}"* ]] ; then
            age="${age1}.${age2}"
#
            co2=`cat ${co2_file} | grep $date1 | grep $age | awk '{print $4}'`
            land=`cat landfrac_nt.dat | grep $date1 | awk '{print $8}'`
#
            echo "$ic $date1 $age ${expid}${let} $co2 $land $expid_olda$let $expid_oldo$let $expid_isl$let" 
#
            new_expt_letter ${expt_orig} $expt y

            \cd ~/umui_jobs/$expt
#
            sed -i -e "s/${expt_tempa}/${expid_olda}$let/" INITHIS
            sed -i -e "s/${expt_tempo}/${expid_oldo}$let/" INITHIS
#
            sed -i -e "s/LAND_FIELD=${land_temp}/LAND_FIELD=${land}/" SIZES
            sed -i -e "s/LAND_POINTS_OUT=${land_temp}/LAND_POINTS_OUT=${land}/" RECONA
#
            sed -i -e "s/${ancil_temp}/${date1}_1deg/" SCRIPT
            sed -i -e "s/${desc_temp}/Scotese_${date1}/" SCRIPT
            sed -i -e "s/${solar_age}/${age} Ma/" SCRIPT
# 
            sed -i -e "s/$co2_temp/$co2/" CNTLATM
#
            head -n -10 CNTLATM > temp1.dat
            \mv temp1.dat CNTLATM
            echo " ### END OF FILE ###"             >> CNTLATM
            /home/swsvalde/scripts/solar_orbit_update $expt # this was orbit_update but i modified it along lines of make_16_jobs 
#
#            if [ "$island" = "y1" ] ; then # maybe this should be = "y"
#               get_rid_islands $expt
#            fi

            if [ "$island" = "y2" ] ; then
              islefile="/home/ggdjl/scotese/islands/umui_${expt_isl}_newislands.dat"
              if [ -f ${islefile} ] ; then
                NISLE=`sed -n 1p ${islefile}`
                NSEGMAX=`sed -n 2p ${islefile}`
                NSEGTOT=`sed -n 3p ${islefile}`
                NEXTCNST=`sed -n 4p ${islefile}`
                sed -i -e "s/NISLE=${nisle_temp}/NISLE=${NISLE}/" SIZES
                sed -i -e "s/ISEGM=${nsegmax_temp}/ISEGM=${NSEGMAX}/" SIZES
                sed -i -e "s/O_LEN_EXTCNST=${nextcnst_temp}/O_LEN_EXTCNST=${NEXTCNST}/" SIZES
                sed -i -e "s/LEN_EXTCNST_OUT=${nextcnst_temp}/LEN_EXTCNST_OUT=${NEXTCNST}/" RECONO
                CNSTTEST=`expr ${NSEGTOT} \* 4 + ${NISLE} + 1`
                if [ ${NEXTCNST} -ne ${CNSTTEST} ] ; then
                  echo 'FATAL: unexpected O_LEN_EXTCNST '${NEXTCNST}' '${CNSTTEST}
                  exit
                fi
              else
                echo 'WARNING: NO ISLAND DATA FOR EXPERIMENT '${expt_isl}
                exit
              fi               
            fi
            
#
            if [ "${do_timestep}" -eq 1 ] ; then
              \cd ~/umui_jobs/$expt
              \cp STASHC STASHC.ORIGINAL
              \cp ~/umui_jobs/STASHC_1_timestep_more STASHC
            fi

            if [ "${do_submit}" -eq 1 ] ; then
              clustersubmit -c n -s n -a y -q veryshort -r bc4 -p 7x4 -w 1:0:0 $expt
            fi  
      
         fi
         fi
      fi



      ic=`expr $ic + 1`
   done
done
